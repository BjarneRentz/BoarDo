/* tslint:disable */
/* eslint-disable */
/**
 * BoarDo.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UrlResult,
} from '../models';
import {
    UrlResultFromJSON,
    UrlResultToJSON,
} from '../models';

export interface ApiAuthCallbackGoogleGetRequest {
    code?: string;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     */
    async apiAuthCallbackGoogleGetRaw(requestParameters: ApiAuthCallbackGoogleGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.code !== undefined) {
            queryParameters['code'] = requestParameters.code;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Auth/Callback/Google`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAuthCallbackGoogleGet(requestParameters: ApiAuthCallbackGoogleGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiAuthCallbackGoogleGetRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiAuthConnectGoogleGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UrlResult>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Auth/Connect/Google`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UrlResultFromJSON(jsonValue));
    }

    /**
     */
    async apiAuthConnectGoogleGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UrlResult> {
        const response = await this.apiAuthConnectGoogleGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAuthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: boolean; }>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Auth`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiAuthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: boolean; }> {
        const response = await this.apiAuthGetRaw(initOverrides);
        return await response.value();
    }

}
